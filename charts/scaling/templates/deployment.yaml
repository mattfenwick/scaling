apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scaling.fullname" . }}-webserver
  labels:
    {{- include "scaling.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "scaling.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        {{- include "scaling.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "scaling.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "webserver"
          command: ["{{ .Values.webserver.binary }}", "/config/config.json"]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.webserver.image }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8765
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readiness
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: webserver-config
